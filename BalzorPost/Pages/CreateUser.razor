@page "/CreateUser"
@using Domain.DTOs
@using HttpsClients.ClientInterfaces
@inject IUserService userService
@inject NavigationManager Navigation
<link href="css/CommonStyles.css" rel="stylesheet"/>

<div class="card">
    <h3>Create User</h3>
    <form @onsubmit="Create">
        <div class="form-group field">
            <input type="text" @bind="username" @bind:event="oninput" placeholder="Username"/>

            <input type="text" @bind="email" @bind:event="oninput" placeholder="Email"/>

            <input type="text" @bind="password" @bind:event="oninput" placeholder="Password"/>

        </div>
        <div class="button-row">
            <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Create</button>
        </div>
    </form>
                @if (!string.IsNullOrEmpty(resultMsg))
                {
                    <label style="color: @color">@resultMsg</label>
                }
</div>



@code {
    private string username = "";
    private string email = "";
    private string password = "";
    private string resultMsg = "";
    private string color = "";


    private async Task Create()
    {
        resultMsg = "";

        try
        {
            await userService.Create(new UserCreationDto(username, email, password));
            username = "";
            email = "";
            password = "";
            resultMsg = "User successfully created";
            color = "green";
            Navigation.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }

}